// <auto-generated />
using Bifrost.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Bifrost.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180114221310_TechModelChange")]
    partial class TechModelChange
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bifrost.Data.Models.Respondent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Age");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CurrentPosition");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsEmployed");

                    b.Property<string>("LastName");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("OtherInfo");

                    b.Property<string>("Phone");

                    b.Property<string>("PlaceOfStudying");

                    b.Property<string>("Skype");

                    b.Property<string>("Speciality");

                    b.HasKey("Id");

                    b.ToTable("Respondents");
                });

            modelBuilder.Entity("Bifrost.Data.Models.RespondentTechnology", b =>
                {
                    b.Property<int>("RespondentId");

                    b.Property<int>("TechnologyId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.HasKey("RespondentId", "TechnologyId");

                    b.HasAlternateKey("Id");

                    b.HasIndex("TechnologyId");

                    b.ToTable("RespondentTechnology");
                });

            modelBuilder.Entity("Bifrost.Data.Models.Technology", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("TechnologyName");

                    b.Property<int>("TechnologyType");

                    b.HasKey("Id");

                    b.ToTable("Technologies");
                });

            modelBuilder.Entity("Bifrost.Data.Models.RespondentTechnology", b =>
                {
                    b.HasOne("Bifrost.Data.Models.Respondent", "Respondent")
                        .WithMany("RespondentsTechnologies")
                        .HasForeignKey("RespondentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bifrost.Data.Models.Technology", "Technology")
                        .WithMany("RespondentsTechnologies")
                        .HasForeignKey("TechnologyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
